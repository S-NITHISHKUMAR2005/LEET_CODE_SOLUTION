-- # Write your MySQL query statement below
-- SELECT A.USER_ID,
--         A.PRODUCT_ID,
--         P1.CATEGORY,
--         B.PRODUCT_ID,
--         P2.CATEGORY
-- FROM PRODUCTPURCHASES A
-- JOIN PRODUCTPURCHASES B
-- ON A.USER_ID = B.USER_ID AND A.PRODUCT_ID < B.PRODUCT_ID
-- JOIN PRODUCTINFO P1 ON A.PRODUCT_ID = P1.PRODUCT_ID
-- JOIN PRODUCTINFO P2 ON B.PRODUCT_ID = P2.PRODUCT_ID
-- GROUP BY A.PRODUCT_ID,B.PRODUCT_ID
-- HAVING COUNT(*) >= 3

-- SELECT LEAST(C1.CATEGORY,C2.CATEGORY)AS CATEGORY1,
--         GREATEST(C1.CATEGORY,C2.CATEGORY)AS CATEGORY2,
--         COUNT(DISTINCT A.USER_ID) AS CUSTOMER_COUNT
-- FROM PRODUCTPURCHASES A
-- JOIN PRODUCTPURCHASES B
-- ON A.USER_ID = B.USER_ID AND A.PRODUCT_ID < B.PRODUCT_ID
-- JOIN PRODUCTINFO C1 ON A.PRODUCT_ID = C1.PRODUCT_ID
-- JOIN PRODUCTINFO C2 ON B.PRODUCT_ID = C2.PRODUCT_ID
-- WHERE C1.CATEGORY <> C2.CATEGORY
-- GROUP BY C1.CATEGORY,C2.CATEGORY
-- HAVING COUNT(DISTINCT A.USER_ID) >= 3
-- ORDER BY CUSTOMER_COUNT DESC,CATEGORY1,CATEGORY2

WITH 
TEST AS
(
    SELECT P.USER_ID,PC.CATEGORY
    FROM PRODUCTPURCHASES P
    LEFT JOIN PRODUCTINFO PC ON P.PRODUCT_ID=PC.PRODUCT_ID
),
MAPPING AS
(
    SELECT T1.USER_ID,LEAST(T1.CATEGORY,T2.CATEGORY)AS CATEGORY1,
        GREATEST(T1.CATEGORY,T2.CATEGORY)AS CATEGORY2
    FROM TEST T1
    JOIN TEST T2 ON T1.USER_ID = T2.USER_ID AND T1.CATEGORY < T2.CATEGORY
)
SELECT CATEGORY1,CATEGORY2,COUNT(DISTINCT USER_ID) AS CUSTOMER_COUNT
FROM MAPPING
GROUP BY CATEGORY1,CATEGORY2
HAVING COUNT(DISTINCT USER_ID) >= 3
ORDER BY CUSTOMER_COUNT DESC,CATEGORY1,CATEGORY2